{"version":3,"sources":["servicios/cliente-service.js","componentes/grilla/grilla.js","componentes/formulario/Formulario.js","componentes/venta/Venta.js","componentes/grillaVentas/grillaVentas.js","componentes/navbar/MyNav.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["id","url","ClientesService","props","fetch","then","response","json","data","rta","cliModel","method","cliente","body","JSON","stringify","headers","res","catch","error","console","clienteID","React","Component","Grilla","actionTemplate","rowData","column","type","icon","className","style","marginRight","onClick","e","eliminarCliente","modificarCliente","cargarVenta","history","push","pathname","state","a","listadoClientes","removeClienteMongo","getClientesMongo","setState","clientes","this","key","value","resizableColumns","columnResizeMode","paginator","rows","rowsPerPageOptions","sortMode","selectionMode","selection","currentCliente","onSelectionChange","field","header","width","sortable","textAlign","withRouter","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","backgroundColor","palette","primary","dense","marginTop","menu","Formulario","handleChange","name","target","enviarForm","preventDefault","nombre","apellido","Number","cta_cte","compras","cliFinal","ClienteDTO","cs","addClienteMongo","location","onSubmit","TextField","label","onChange","margin","variant","Button","color","currencies","Venta","compraAux","Compra","producto","fecha","monto","cobrado","montoFinal","log","editClienteMongo","select","SelectProps","MenuProps","helperText","map","option","MenuItem","GrillaVentas","MyNav","logo","Container","Navbar","bg","expand","fixed","Brand","href","src","height","alt","Toggle","aria-controls","Collapse","Nav","to","exact","path","component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.97fce0b4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet id = 1;\nlet url = \"http://192.168.2.193:3003/clientes\"\n\nclass ClientesService extends React.Component{\n    \n    constructor(props){\n        super(props);\n    }\n\n    getClientes(){\n      return[{\n          \"nombre\": \"Sheila-kathryn\",\n          \"apellido\": \"Webber\",\n          \"_id\": 1\n        }, {\n          \"nombre\": \"Wrennie\",\n          \"apellido\": \"Clack\",\n          \"_id\": 2\n        }, {\n          \"nombre\": \"Fremont\",\n          \"apellido\": \"Warburton\",\n          \"_id\": 3\n        }, {\n          \"nombre\": \"Chloe\",\n          \"apellido\": \"Twede\",\n          \"_id\": 4\n        }, {\n          \"nombre\": \"Dieter\",\n          \"apellido\": \"Christou\",\n          \"_id\": 5\n        }, {\n          \"nombre\": \"Abagael\",\n          \"apellido\": \"Luna\",\n          \"_id\": 6\n        }, {\n          \"nombre\": \"Amberly\",\n          \"apellido\": \"Verryan\",\n          \"_id\": 7\n        }, {\n          \"nombre\": \"Aidan\",\n          \"apellido\": \"Cowmeadow\",\n          \"_id\": 8\n        }, {\n          \"nombre\": \"Harli\",\n          \"apellido\": \"Bergin\",\n          \"_id\": 9\n        }, {\n          \"nombre\": \"Georgeanne\",\n          \"apellido\": \"Hovey\",\n          \"_id\": 10\n        }, {\n          \"nombre\": \"Aylmar\",\n          \"apellido\": \"Howship\",\n          \"_id\": 11\n        }, {\n          \"nombre\": \"Dorian\",\n          \"apellido\": \"Caslin\",\n          \"_id\": 12\n        }, {\n          \"nombre\": \"Pyotr\",\n          \"apellido\": \"Marciek\",\n          \"_id\": 13\n        }, {\n          \"nombre\": \"Corrinne\",\n          \"apellido\": \"Erricker\",\n          \"_id\": 14\n        }, {\n          \"nombre\": \"Vassili\",\n          \"apellido\": \"Oliver\",\n          \"_id\": 15\n        }, {\n          \"nombre\": \"Mellie\",\n          \"apellido\": \"Danielsohn\",\n          \"_id\": 16\n        }, {\n          \"nombre\": \"Adelice\",\n          \"apellido\": \"Heinl\",\n          \"_id\": 17\n        }, {\n          \"nombre\": \"Melva\",\n          \"apellido\": \"Tweedle\",\n          \"_id\": 18\n        }, {\n          \"nombre\": \"Audra\",\n          \"apellido\": \"Duham\",\n          \"_id\": 19\n        }, {\n          \"nombre\": \"Udale\",\n          \"apellido\": \"MacGlory\",\n          \"_id\": 20\n        }]\n    }\n    \n    getClientesMongo() {\n      return fetch('http://192.168.2.193:3003/clientes')\n          .then(function(response) {\n              return response.json();\n          })\n          .then(function(data) {\n              //console.log(data.rta);\n              return data.rta\n          });\n    }\n\n    addClienteMongo(cliModel){\n      let method = \"POST\" \n      if (cliModel.cliente.id) {\n        method = \"PUT\";\n        url = url +\"/\"+cliModel.cliente.id\n      }else{\n        cliModel.cliente.id = id++;\n      }\n      return fetch(url, {\n        method: method,\n        body: JSON.stringify(cliModel), \n        headers:{\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json())\n      .catch(error => console.error('Error:', error))\n      .then(res =>{\n        return true;\n        });\n    }\n\n\n    editClienteMongo(cliModel){   \n      return fetch('http://192.168.2.193:3003/clientes/'+cliModel.cliente.id, {\n        method: 'PUT',\n        body: JSON.stringify(cliModel),\n        headers:{\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json())\n      .catch(error => console.error('Error:', error))\n      .then(res =>{\n        return true;\n        });\n    }\n\n    removeClienteMongo(clienteID){   \n      return fetch('http://192.168.2.193:3003/clientes/'+clienteID, {\n        method: 'DELETE',\n      }).then(res => res.json())\n      .catch(error => console.error('Error:', error))\n      .then(res =>{\n        return true;\n        });\n    }\n    \n}\n\nexport default ClientesService;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './grilla.css';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {Button} from 'primereact/button';\nimport ClientesService from '../../servicios/cliente-service';\nimport Dialogo from '../../utils/dialogo/dialogo';\nimport { Alert } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link,withRouter } from \"react-router-dom\";\n\n\n\nclass Grilla extends React.Component{\n    listadoClientes;\n\n    constructor(props){\n        super(props);\n        this.state = {};\n        this.listadoClientes = new ClientesService()\n    }\n\n    async componentDidMount() {\n\n         const data = await this.listadoClientes.getClientesMongo();\n         this.setState({clientes: data})\n    }\n\n    actionTemplate = (rowData, column) => {\n        return <div>\n            <Button type=\"button\" \n                    icon=\"pi pi-trash\" \n                    className=\"p-button-danger\" \n                    style={{marginRight: '.5em'}}\n                    onClick={ e =>{ this.eliminarCliente(rowData)}}>\n\n            </Button>\n            <Button \n                type=\"button\" \n                icon=\"pi pi-pencil\" \n                className=\"p-button-warning\"\n                onClick={ e =>{ this.modificarCliente(rowData)}}>\n\n            </Button>\n            <Button \n                type=\"button\" \n                icon=\"pi pi-shopping-cart\" \n                className=\"p-button-succes\"\n                onClick={ e =>{ this.cargarVenta(rowData)}}>\n\n            </Button>\n        </div>;\n    }\n\n\n    modificarCliente =(rowData) => {\n        //this.props.history.push(\"/clientes/update/\")\n\n        // this.props.history.push({\n        //     pathname: '/clientes/update/'+rowData,\n        //   })\n        this.props.history.push({\n            pathname: '/clientes/update/'+rowData.id,\n            state: { cliente: rowData }\n          })\n        //console.log(rowData);\n    }\n\n    cargarVenta =(rowData) => {\n        this.props.history.push({\n            pathname: '/ventas/cargar/'+rowData.id,\n            state: { cliente: rowData }\n          })\n    }\n\n     eliminarCliente = async (rowData) => {\n        await this.listadoClientes.removeClienteMongo(rowData.id);\n        const data = await this.listadoClientes.getClientesMongo();\n         this.setState({clientes: data})\n        \n    }\n\n    render(){\n    return([\n        <div key=\"tabla\" className=\"content-section implementation\">\n            <h3>Grilla</h3>\n            <DataTable \n                value={this.state.clientes} \n                resizableColumns={true} \n                columnResizeMode=\"fit\" \n                paginator={true} \n                // paginatorLeft={paginatorLeft} \n                // paginatorRight={paginatorRight} \n                rows={10} \n                rowsPerPageOptions={[5,10,20]}\n                sortMode=\"multiple\"\n                selectionMode=\"single\"\n                selection={this.state.currentCliente} \n                onSelectionChange={e => this.setState({currentCliente: e.value})}>\n                \n                <Column field=\"nombre\" header=\"Nombre\" style={{width:'20%'}} sortable={true}/>\n                <Column field=\"apellido\" header=\"Apellido\" style={{width:'40%'}} sortable={true}/>\n                <Column field=\"id\" header=\"id\" style={{width:'20%'}} sortable={true}/>\n                <Column field=\"cta_cte\" header=\"cta_cte\" style={{width:'20%'}} sortable={true}/>\n                <Column body={this.actionTemplate} style={{textAlign:'center', width: '8em'}}/>\n\n            </DataTable>\n        </div>\n    ])}\n\n}\n\nexport default withRouter(Grilla);\n\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link,withRouter } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropType from 'prop-types';\nimport ClientesService from '../../servicios/cliente-service';\nimport Grilla from '../grilla/grilla'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      backgroundColor: theme.palette.primary\n    },\n    dense: {\n      marginTop: theme.spacing(2),\n    },\n    menu: {\n      width: 200,\n    },\n  }));\n\n\n  function Example() {\n    // Declara una nueva variable de estado, que llamaremos \"count\".\n    const [count, setCount] = useState(0);\n\n    // Similar a componentDidMount y componentDidUpdate:\n    useEffect(() => {\n        // Actualiza el título del documento usando la Browser API\n        document.title = `You clicked ${count} times`;\n    });\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <Button type=\"button\" \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={() => setCount(count + 1)}>\n                        Click me\n                    </Button>\n\n        </div>\n    );\n}\n\n\nclass Formulario extends React.Component{\n    cs;\n    constructor(props){\n        super(props);\n        this.state ={\n          nombre:\"\",\n          apellido:\"\",\n          cta_cte:0,\n          compras:[]\n        }\n        this.cs = new ClientesService()\n    }\n\n    componentDidMount() {\n\n      if (this.props.location.state) {\n        this.setState({...this.props.location.state.cliente})\n      }\n    }\n    \n    handleChange =(e) => {\n        //console.log(\"evento: \",e);\n        let name = e.target.name;\n        this.setState({\n        [name]: e.target.value\n        })\n        \n    }\n    \n     enviarForm = async (e)  => {\n      e.preventDefault();\n      //this.props.custom(e)\n      \n      \n      let cliModel = new cliente(this.state.nombre,\n                                  this.state.apellido,\n                                  Number(this.state.id),\n                                  Number(this.state.cta_cte),\n                                  this.state.compras)\n      let cliFinal = new ClienteDTO(cliModel);\n      \n      const a = await this.cs.addClienteMongo(cliFinal);\n      if (a == true) {\n        this.props.history.push(\"/clientes\")\n      }\n      \n      \n\n    }\n\n\n\n    render(){\n\n        return(\n            <div>\n                <form className={useStyles.container} onSubmit={this.enviarForm}>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"nombre\"\n                        name=\"nombre\"\n                        className={useStyles.textField}\n                        value={this.state.nombre}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <br/>\n                    <TextField\n                        id=\"standar-name\"\n                        label=\"Apellido\"\n                        name=\"apellido\"\n                        className={useStyles.textField}\n                        value={this.state.apellido}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    {/* <br/>\n                    <TextField\n                        id=\"standar-name\"\n                        label=\"Cuenta corriente\"\n                        name=\"cta_cte\"\n                        type=\"number\"\n                        className={useStyles.textField}\n                        value={this.state.cta_cte}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    /> */}\n                    <br/>\n                    <Button \n                      type=\"submit\" \n                      variant=\"contained\" \n                      color=\"primary\">\n                        Enviar\n                    </Button>\n                </form>\n                \n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Formulario);\n\n\nclass cliente{\n\n  constructor(nombre,apellido,id,cta_cte, compras){\n    this.nombre = nombre;\n    this.apellido = apellido;\n    this.id = id;\n    this.cta_cte = cta_cte;\n    this.compras = compras;\n  }\n\n}\n\nclass ClienteDTO{\n  constructor(cliente){\n    this.cliente = cliente;\n  }\n}\n\nclass Venta{\n\n  constructor(producto,fecha,monto,cobrado){\n    this.producto = producto;\n    this.fecha = fecha;\n    this.monto = monto;\n    this.cobrado = cobrado;\n  }\n\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link,withRouter } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropType from 'prop-types';\nimport ClientesService from '../../servicios/cliente-service';\nimport Grilla from '../grilla/grilla'\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      backgroundColor: theme.palette.primary\n    },\n    dense: {\n      marginTop: theme.spacing(2),\n    },\n    menu: {\n      width: 200,\n    },\n  }));\n\n  const currencies = [\n    {\n      value: true,\n      label: 'si',\n    },\n    {\n      value: false,\n      label: 'no',\n    }\n  ];\n\n\n\n\nclass Venta extends React.Component{\n    cs;\n    clienteAux;\n    constructor(props){\n        super(props);\n        this.state ={\n          nombre:\"\",\n          apellido:\"\",\n          cta_cte:\"\",\n          compras:[],\n          producto:\"\",\n          fecha:\"\",\n          monto:\"\",\n          cobrado:\"\",\n        }\n        this.cs = new ClientesService()\n    }\n\n    componentDidMount() {\n\n       if (this.props.location.state) {         \n         this.setState({...this.props.location.state.cliente})\n       }\n    }\n    \n    handleChange =(e) => {\n        //console.log(\"evento: \",e);\n        let name = e.target.name;\n        this.setState({\n        [name]: e.target.value\n        })\n        \n    }\n\n\n    \n     enviarForm = async (e)  => {\n      e.preventDefault();\n      let compraAux = new Compra(\n        this.state.producto,\n        this.state.fecha,\n        this.state.monto,\n        this.state.cobrado\n      )\n      let montoFinal = this.state.cta_cte;\n      if (this.state.cobrado == false) {\n        montoFinal = Number(montoFinal) + Number(this.state.monto);\n      }\n       let cliModel = new cliente(this.state.nombre,\n                                   this.state.apellido,\n                                   Number(this.state.id),\n                                   Number(montoFinal),\n                                   compraAux)\n       let cliFinal = new ClienteDTO(cliModel);\n       console.log(cliFinal);\n       \n      const a = await this.cs.editClienteMongo(cliFinal);\n       if (a == true) {\n         this.props.history.push(\"/clientes\")\n       }\n    }\n\n\n\n    render(){\n\n        return(\n            <div>\n                <form className={useStyles.container} onSubmit={this.enviarForm}>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"producto\"\n                        name=\"producto\"\n                        className={useStyles.textField}\n                        value={this.state.producto}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <br/>\n                    <TextField\n                        id=\"standar-name\"\n                        name=\"fecha\"\n                        type=\"date\"\n                        className={useStyles.textField}\n                        value={this.state.fecha}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <br/>\n                    <TextField\n                        id=\"standar-name\"\n                        label=\"monto\"\n                        name=\"monto\"\n                        type=\"number\"\n                        className={useStyles.textField}\n                        value={this.state.monto}\n                        // onChange={handleChange('name')}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <br/>\n                    <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"Select\"\n                        name=\"cobrado\"\n                        className={useStyles.textField}\n                        value={this.state.cobrado}\n                        onChange={this.handleChange}\n                        SelectProps={{\n                          MenuProps: {\n                            className: useStyles.menu,\n                          },\n                        }}\n                        helperText=\"Please select your currency\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    >             \n                        {currencies.map(option => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                    </TextField>\n\n                      <br/>\n                    <Button \n                      type=\"submit\" \n                      variant=\"contained\" \n                      color=\"primary\">\n                        Enviar\n                    </Button>\n                </form>\n                \n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(Venta);\n\n\nclass Compra{\n\n  constructor(producto,fecha,monto,cobrado){\n    this.producto = producto;\n    this.fecha = fecha;\n    this.monto = monto;\n    this.cobrado = cobrado;\n  }\n\n}\n\nclass cliente{\n\n  constructor(nombre,apellido,id,cta_cte, compras){\n    this.nombre = nombre;\n    this.apellido = apellido;\n    this.id = id;\n    this.cta_cte = cta_cte;\n    this.compras = compras;\n  }\n\n}\n\nclass ClienteDTO{\n  constructor(cliente){\n    this.cliente = cliente;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './grillaVentas.css';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {Button} from 'primereact/button';\nimport ClientesService from '../../servicios/cliente-service';\nimport Dialogo from '../../utils/dialogo/dialogo';\nimport { Alert } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link,withRouter } from \"react-router-dom\";\n\n\n\nclass GrillaVentas extends React.Component{\n    listadoClientes;\n\n    constructor(props){\n        super(props);\n        this.state = {};\n        this.listadoClientes = new ClientesService()\n    }\n\n    async componentDidMount() {\n\n         const data = await this.listadoClientes.getClientesMongo();\n         this.setState({clientes: data})\n    }\n\n\n\n    render(){\n    return([\n        <div key=\"tabla\" className=\"content-section implementation\">\n            <h3>Grilla</h3>\n            <DataTable \n                value={this.state.clientes} \n                resizableColumns={true} \n                columnResizeMode=\"fit\" \n                paginator={true} \n                // paginatorLeft={paginatorLeft} \n                // paginatorRight={paginatorRight} \n                rows={10} \n                rowsPerPageOptions={[5,10,20]}\n                sortMode=\"multiple\"\n                selectionMode=\"single\"\n                selection={this.state.currentCliente} \n                onSelectionChange={e => this.setState({currentCliente: e.value})}>\n                \n                <Column field=\"nombre\" header=\"Nombre\" style={{width:'20%'}} sortable={true}/>\n                <Column field=\"compras.producto\" header=\"producto\" style={{width:'40%'}} sortable={true}/>\n                <Column field=\"compras.fecha\" header=\"fecha\" style={{width:'20%'}} sortable={true}/>\n                <Column field=\"compras.monto\" header=\"monto\" style={{width:'20%'}} sortable={true}/>\n            </DataTable>\n        </div>\n    ])}\n\n}\n\nexport default withRouter(GrillaVentas);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Navbar,Nav,Container,Button} from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Link,withRouter } from \"react-router-dom\";\nimport Formulario from  '../formulario/Formulario'\nimport Venta from  '../venta/Venta'\nimport Grilla from  '../grilla/grilla'\nimport GrillaVentas from  '../grillaVentas/grillaVentas'\nimport './MyNav.css';\n\n\n\nclass MyNav extends React.Component{\n    \n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let {logo} = this.props;\n        return([\n            <div key=\"1\">\n                <Container>\n                  <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n                    <Navbar.Brand href=\"#home\">\n                      <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top App-logo\" alt=\"Logo\"/>\n                       {' React SLopez'}\n                    </Navbar.Brand>\n                      <Navbar.Toggle aria-controls=\"collapseNav\" />\n                      <Navbar.Collapse id=\"collapseNav\">\n                        <Nav className=\"mr-auto\">\n                          <Link className=\"nav-link\" to=\"/clientes/cargar\" >Alta</Link> \n                          <Link className=\"nav-link\" to=\"/clientes\" >Grilla</Link>\n                          <Link className=\"nav-link\" to=\"/ventas\" >Ventas</Link>\n                          {/* <Link className=\"nav-link\" to=\"/clientes/update/:id\" >Modificar</Link>  */}\n                         \n                          {/* <Button className=\"nav-link\" variant=\"dark\">\n                            <Link className=\"nav-link\" to=\"/grilla/\" >Grilla</Link> \n                          </Button>\n                          <Button className=\"nav-link\"  variant=\"link\">\n                            <Link className=\"nav-link\" to=\"/formulario/\" >Formulario</Link>\n                          </Button> */}\n                        </Nav>\n                       </Navbar.Collapse>\n                  </Navbar>\n                </Container>\n          </div>,\n            <div className=\"cuerpo\" key=\"2\">\n                <Route exact path=\"/clientes\" component={Grilla} />\n                <Route exact path=\"/clientes/cargar\" component={Formulario} />\n                <Route exact path=\"/clientes/update/:id\" component={Formulario} />\n                <Route exact path=\"/ventas/cargar/:id\" component={Venta} />\n                <Route exact path=\"/ventas\" component={GrillaVentas} />\n            </div>\n          \n        ])\n    }\n\n}\n\nexport default withRouter(MyNav);\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyNav from './componentes/navbar/MyNav'\nimport {Formulario,Example} from  './componentes/formulario/Formulario'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyNav logo={logo}></MyNav>\n      {/* <header className=\"App-header\">\n        <Formulario custom={myFunction}></Formulario>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'primereact/resources/themes/nova-dark/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}